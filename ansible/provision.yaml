---
- hosts: all
  become: "yes"
  vars_files:
    - vars_enc
  tasks:
    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}"
        use: alpine

    - name: Set authorized key from local file
      authorized_key:
        user: root
        state: present
        key: "{{ lookup('file', '~/.ssh/id_ecdsa.pub') }}"

    - name: Create incomplete-downloads directory
      file:
        path: "/data/k3s/incomplete-downloads"
        state: directory
        mode: '0755'

    - name: Copy/ Update k3s command args
      template:
        src: templates/k3s_confd.tmpl
        dest: /data/k3s_config

    - name: Copy iscsid.conf
      copy:
        src: "{{ playbook_dir }}/files/iscsid.conf"
        dest: /data/iscsid.conf

    - name: md5 sum of old k3s config
      stat:
        path: "/etc/conf.d/k3s"
      register: old_k3s_config

    - name: md5 sum of old iscsi config
      stat:
        path: "/etc/iscsi/iscsid.conf"
      register: old_iscsi_config

    - name: md5 sum of new k3s config
      stat:
        path: "/data/k3s_config"
      register: new_k3s_config

    - name: md5 sum of new iscsi config
      stat:
        path: "/data/iscsid.conf"
      register: new_iscsi_config

    - name: compare k3s config files
      command: test {{ old_k3s_config.stat.checksum }} = {{ new_k3s_config.stat.checksum }}
      failed_when: k3s_file_diff.stderr
      changed_when: "k3s_file_diff.rc != 0"
      register: k3s_file_diff
      notify:
        - stop k3s
        - remount-rw

    - name: compare iscsi config files
      command: test {{ old_iscsi_config.stat.checksum }} = {{ new_iscsi_config.stat.checksum }}
      failed_when: iscsi_file_diff.stderr
      changed_when: "iscsi_file_diff.rc != 0"
      register: iscsi_file_diff
      notify:
        - stop k3s
        - remount-rw
        - restart iscsi

    - name: trigger remount
      meta: flush_handlers

    - name: ensure k3s is enabled at startup
      service:
        name: k3s
        enabled: yes
      when: k3s_file_diff.changed

    - name: Flannel-arm64 workaround
      file:
        src: "/usr/libexec/cni/flannel-arm64"
        dest: "/usr/libexec/cni/flannel"
        state: link
      when: k3s_file_diff.changed

    - name: install new iscsi config
      copy:
        src: /data/iscsid.conf
        dest: /etc/iscsi/iscsid.conf
        remote_src: yes
      when: iscsi_file_diff.changed
      notify:
        - remount-ro

    - name: install new k3s config
      copy:
        src: "/data/k3s_config"
        dest: "/etc/conf.d/k3s"
        remote_src: yes
      when: k3s_file_diff.changed
      notify:
        - remount-ro

    - name: trigger remount
      meta: flush_handlers

    - name: delete new k3s config from temp location
      file:
        path: /data/k3s_config
        state: absent

    - name: delete new iscsi config from temp location
      file:
        path: /data/iscsi.conf
        state: absent

    - name: Make sure k3s is started
      service:
        name: k3s
        state: started

  handlers:
    - name: restart k3s
      service:
        name: k3s
        state: restarted
    - name: stop k3s
      service:
        name: k3s
        state: stopped
    - name: restart iscsid
      service:
        name: iscsid
        state: restarted
    - name: remount-rw
      mount:
        path: /
        state: remounted
        opts: rw
    - name: remount-ro
      mount:
        path: /
        state: remounted
        opts: ro
      
# set motd to something helpful for k8s (like node name, node role, IP address)
# configure uploading state file to S3
# set root password
